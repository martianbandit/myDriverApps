{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { supabase } from \"../services/supabase\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    repairs = _useState2[0],\n    setRepairs = _useState2[1];\n  useEffect(function () {\n    fetchRepairs();\n  }, []);\n  var fetchRepairs = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _yield$supabase$from$ = yield supabase.from('Repairs').select('*'),\n        data = _yield$supabase$from$.data,\n        error = _yield$supabase$from$.error;\n      if (error) console.log('Error fetching repairs:', error.message);else setRepairs(data);\n    });\n    return function fetchRepairs() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    children: repairs.map(function (repair) {\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: repair.truck_model\n        }), _jsx(Text, {\n          children: repair.repair_description\n        }), _jsx(Text, {\n          children: repair.status\n        })]\n      }, repair.id);\n    })\n  });\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","View","Text","supabase","jsx","_jsx","jsxs","_jsxs","Dashboard","_useState","_useState2","_slicedToArray","repairs","setRepairs","fetchRepairs","_ref","_asyncToGenerator","_yield$supabase$from$","from","select","data","error","console","log","message","apply","arguments","children","map","repair","truck_model","repair_description","status","id"],"sources":["/workspaces/myDriverApps/screens/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport { supabase } from '../services/supabase';\n\nconst Dashboard = () => {\n  const [repairs, setRepairs] = useState([]);\n\n  useEffect(() => {\n    fetchRepairs();\n  }, []);\n\n  const fetchRepairs = async () => {\n    const { data, error } = await supabase\n      .from('Repairs')\n      .select('*');\n    if (error) console.log('Error fetching repairs:', error.message);\n    else setRepairs(data);\n  };\n\n  return (\n    <View>\n      {repairs.map(repair => (\n        <View key={repair.id}>\n          <Text>{repair.truck_model}</Text>\n          <Text>{repair.repair_description}</Text>\n          <Text>{repair.status}</Text>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Dashboard;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,SAASC,QAAQ;AAA+B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAAC,SAAA,GAA8BV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1BV,SAAS,CAAC,YAAM;IACdc,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,YAAY;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAAC,qBAAA,SAA8Bd,QAAQ,CACnCe,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC;QAFNC,IAAI,GAAAH,qBAAA,CAAJG,IAAI;QAAEC,KAAK,GAAAJ,qBAAA,CAALI,KAAK;MAGnB,IAAIA,KAAK,EAAEC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,KAC5DX,UAAU,CAACO,IAAI,CAAC;IACvB,CAAC;IAAA,gBANKN,YAAYA,CAAA;MAAA,OAAAC,IAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMjB;EAED,OACErB,IAAA,CAACJ,IAAI;IAAA0B,QAAA,EACFf,OAAO,CAACgB,GAAG,CAAC,UAAAC,MAAM;MAAA,OACjBtB,KAAA,CAACN,IAAI;QAAA0B,QAAA,GACHtB,IAAA,CAACH,IAAI;UAAAyB,QAAA,EAAEE,MAAM,CAACC;QAAW,CAAO,CAAC,EACjCzB,IAAA,CAACH,IAAI;UAAAyB,QAAA,EAAEE,MAAM,CAACE;QAAkB,CAAO,CAAC,EACxC1B,IAAA,CAACH,IAAI;UAAAyB,QAAA,EAAEE,MAAM,CAACG;QAAM,CAAO,CAAC;MAAA,GAHnBH,MAAM,CAACI,EAIZ,CAAC;IAAA,CACR;EAAC,CACE,CAAC;AAEX,CAAC;AAED,eAAezB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}